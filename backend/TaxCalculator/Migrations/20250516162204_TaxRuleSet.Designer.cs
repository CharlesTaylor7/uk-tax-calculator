// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaxCalculator.Data;

#nullable disable

namespace TaxCalculator.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250516162204_TaxRuleSet")]
    partial class TaxRuleSet
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TaxCalculator.Models.TaxBand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LowerLimit")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("PercentageRate")
                        .HasColumnType("integer");

                    b.Property<int>("TaxRuleSetId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TaxRuleSetId");

                    b.ToTable("TaxBands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LowerLimit = 0,
                            Name = "A",
                            PercentageRate = 0,
                            TaxRuleSetId = 1
                        },
                        new
                        {
                            Id = 2,
                            LowerLimit = 5000,
                            Name = "B",
                            PercentageRate = 20,
                            TaxRuleSetId = 1
                        },
                        new
                        {
                            Id = 3,
                            LowerLimit = 20000,
                            Name = "C",
                            PercentageRate = 40,
                            TaxRuleSetId = 1
                        });
                });

            modelBuilder.Entity("TaxCalculator.Models.TaxRuleSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TaxRuleSets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Default"
                        });
                });

            modelBuilder.Entity("TaxCalculator.Models.TaxBand", b =>
                {
                    b.HasOne("TaxCalculator.Models.TaxRuleSet", "TaxRuleSet")
                        .WithMany("TaxBands")
                        .HasForeignKey("TaxRuleSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaxRuleSet");
                });

            modelBuilder.Entity("TaxCalculator.Models.TaxRuleSet", b =>
                {
                    b.Navigation("TaxBands");
                });
#pragma warning restore 612, 618
        }
    }
}
